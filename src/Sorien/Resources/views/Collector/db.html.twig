{% extends '@WebProfiler/Profiler/layout.html.twig' %}

{% block toolbar %}
    {% set icon %}
        <svg version="1.1" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" height="24" viewBox="0 0 24 24" enable-background="new 0 0 24 24" xml:space="preserve">
            <path fill="#AAAAAA" d="M5,8h14c1.7,0,3-1.3,3-3s-1.3-3-3-3H5C3.3,2,2,3.3,2,5S3.3,8,5,8z M18,3.6c0.8,0,1.5,0.7,1.5,1.5S18.8,6.6,18,6.6s-1.5-0.7-1.5-1.5S17.2,3.6,18,3.6z M19,9H5c-1.7,0-3,1.3-3,3s1.3,3,3,3h14c1.7,0,3-1.3,3-3S20.7,9,19,9z M18,13.6
            c-0.8,0-1.5-0.7-1.5-1.5s0.7-1.5,1.5-1.5s1.5,0.7,1.5,1.5S18.8,13.6,18,13.6z M19,16H5c-1.7,0-3,1.3-3,3s1.3,3,3,3h14c1.7,0,3-1.3,3-3S20.7,16,19,16z M18,20.6c-0.8,0-1.5-0.7-1.5-1.5s0.7-1.5,1.5-1.5s1.5,0.7,1.5,1.5S18.8,20.6,18,20.6z"></path>
        </svg>
        <span class="sf-toolbar-value">{{ collector.querycount }}</span>
        {% if collector.querycount > 0 %}
        <span class="sf-toolbar-info-piece-additional-detail">
            <span class="sf-toolbar-label">in</span>
            <span class="sf-toolbar-value">{{ '%0.2f'|format(collector.time * 1000) }}</span>
            <span class="sf-toolbar-label">ms</span>
        </span>
        {% endif %}
    {% endset %}
    {% set text %}
        {% spaceless %}
        <div class="sf-toolbar-info-piece">
            <b>Database Queries</b>
            <span class="sf-toolbar-status">{{ collector.querycount }}</span>
        </div>
        <div class="sf-toolbar-info-piece">
            <b>Query time</b>
            <span>{{ '%0.2f'|format(collector.time * 1000) }} ms</span>
        </div>
        {% endspaceless %}
    {% endset %}
    {% include '@WebProfiler/Profiler/toolbar_item.html.twig' with { 'link': profiler_url } %}
{% endblock %}

{% block menu %}
<span class="label {% if collector.querycount == 0 %}disabled{% endif %}">
    <span class="icon">
        <svg version="1.1" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" height="24" viewBox="0 0 24 24" enable-background="new 0 0 24 24" xml:space="preserve">
            <path fill="#AAAAAA" d="M5,8h14c1.7,0,3-1.3,3-3s-1.3-3-3-3H5C3.3,2,2,3.3,2,5S3.3,8,5,8z M18,3.6c0.8,0,1.5,0.7,1.5,1.5S18.8,6.6,18,6.6s-1.5-0.7-1.5-1.5S17.2,3.6,18,3.6z M19,9H5c-1.7,0-3,1.3-3,3s1.3,3,3,3h14c1.7,0,3-1.3,3-3S20.7,9,19,9z M18,13.6
            c-0.8,0-1.5-0.7-1.5-1.5s0.7-1.5,1.5-1.5s1.5,0.7,1.5,1.5S18.8,13.6,18,13.6z M19,16H5c-1.7,0-3,1.3-3,3s1.3,3,3,3h14c1.7,0,3-1.3,3-3S20.7,16,19,16z M18,20.6c-0.8,0-1.5-0.7-1.5-1.5s0.7-1.5,1.5-1.5s1.5,0.7,1.5,1.5S18.8,20.6,18,20.6z"></path>
        </svg>
    </span>
    <strong>Doctrine</strong>
    <span class="count">
        <span>{{ collector.querycount }}</span>
        <span>{{ '%0.0f'|format(collector.time * 1000) }} ms</span>
    </span>
</span>
{% endblock %}

{% block panel %}
    <style>
        .queries-table td, .queries-table th { vertical-align: top; }
        .queries-table td > div { margin-bottom: 6px; }
        .highlight pre { margin: 0; white-space: pre-wrap; }
        .highlight .keyword   { color: #8959A8; font-weight: bold; }
        .highlight .symbol    { color: #222222; }
        .highlight .comment   { color: #999999; }
        .highlight .string    { color: #718C00; }
        .highlight .number    { color: #F5871F; font-weight: bold; }
    </style>
    <h2>Queries</h2>
    {% set count = collector.queries|length %}
    {% for name, queries in collector.queries %}
        {% if count > 1 %}
            <h3>{{ name }}</h3>
        {% endif %}
        {% if queries is empty %}
            <p>
                <em>No queries.</em>
            </p>
        {% else %}
            <table class="alt queries-table">
                <thead>
                <tr>
                    <th class="nowrap" onclick="javascript:sortTable(this, 0, 'queries-{{ loop.index }}')" data-sort-direction="-1" style="cursor: pointer;">#<span class="text-muted">&#9650;</span></th>
                    <th class="nowrap" onclick="javascript:sortTable(this, 1, 'queries-{{ loop.index }}')" style="cursor: pointer;">Time<span></span></th>
                    <th style="width: 100%;">Info</th>
                </tr>
                </thead>
                <tbody id="queries-{{ loop.index }}">
                    {% for i, query in queries %}
                    <tr id="queryNo-{{ i }}-{{ loop.parent.loop.index }}">
                        <td>{{ loop.index }}</td>
                        <td class="nowrap">{{ '%0.2f'|format(query.executionMS * 1000) }} ms</td>
                        <td>
                            <pre class="highlight highlight_sql">{{ query.sql }}</pre>
                            <div>
                                <strong class="font-normal text-small">Parameters</strong>: {{ query.params|json_encode() }}
                            </div>
                        </td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
        {% endif %}
    {% endfor %}
    <script type="text/javascript">//<![CDATA[
        function sortTable(header, column, targetId) {
            "use strict";

            var direction = parseInt(header.getAttribute('data-sort-direction')) || 1,
                    items = [],
                    target = document.getElementById(targetId),
                    rows = target.children,
                    headers = header.parentElement.children,
                    i;

            for (i = 0; i < rows.length; ++i) {
                items.push(rows[i]);
            }

            for (i = 0; i < headers.length; ++i) {
                headers[i].removeAttribute('data-sort-direction');
                if (headers[i].children.length > 0) {
                    headers[i].children[0].innerHTML = '';
                }
            }

            header.setAttribute('data-sort-direction', (-1*direction).toString());
            header.children[0].innerHTML = direction > 0 ? '<span class="text-muted">&#9650;</span>' : '<span class="text-muted">&#9660;</span>';

            items.sort(function(a, b) {
                return direction * (parseFloat(a.children[column].innerHTML) - parseFloat(b.children[column].innerHTML));
            });

            for (i = 0; i < items.length; ++i) {
                Sfjs.removeClass(items[i], i % 2 ? 'even' : 'odd');
                Sfjs.addClass(items[i], i % 2 ? 'odd' : 'even');
                target.appendChild(items[i]);
            }
        }

        function clear_spans(match) {
            match = match.replace(/<span.*?>/g, "");
            match = match.replace(/<\/span>/g, "");
            return "<span class=\"comment\">"+match+"</span>";
        }

        // @see http://thecodeplayer.com/walkthrough/mysql-syntax-highlighter-javascript-regex
        function highlight_sql(text) {
            "use strict";
            var k = ["AND", "AS", "ASC", "BETWEEN", "BY", "CASE", "CURRENT_DATE", "CURRENT_TIME", "DELETE", "DESC", "DISTINCT", "EACH", "ELSE", "ELSEIF", "FALSE", "FOR", "FROM", "GROUP", "HAVING", "IF", "IN", "INSERT", "INTERVAL", "INTO", "IS", "JOIN", "KEY", "KEYS", "LEFT", "LIKE", "LIMIT", "MATCH", "NOT", "NULL", "ON", "OPTION", "OR", "ORDER", "OUT", "OUTER", "REPLACE", "RIGHT", "SELECT", "SET", "TABLE", "THEN", "TO", "TRUE", "UPDATE", "VALUES", "WHEN", "WHERE"];
            var len = k.length;
            for(i = 0; i < len; i++) {
                k.push(k[i].toLowerCase());
            }

            var c = text.replace(/(=|%|\/|\*|-|,|;|\+|<|>)/g, "<span class=\"symbol\">$1</span>");
            c = c.replace(/(['`].*?['`])/g, "<span class=\"string\">$1</span>");
            c = c.replace(/(\d+)/g, "<span class=\"number\">$1</span>");
            c = c.replace(/(\w*?)\(/g, "<span class=\"keyword\">$1</span>(");
            c = c.replace(/([\(\)])/g, "<span class=\"symbol\">$1</span>");

            for(var i = 0; i < k.length; i++)
            {
                var re = new RegExp("\\b"+k[i]+"\\b", "g");
                c = c.replace(re, "<span class=\"keyword\">"+k[i]+"</span>");
            }
            c = c.replace(/(#.*?\n)/g, clear_spans);
            c = c.replace(/<span class=\"symbol\">-<\/span><span class=\"symbol\">-<\/span>/g, "--");
            c = c.replace(/(-- .*?\n)/g, clear_spans);
            c = c.replace(/<span class=\"symbol\">\/<\/span><span class=\"symbol\">\*<\/span>/g, "/*");
            c = c.replace(/<span class=\"symbol\">\*<\/span><span class=\"symbol\">\/<\/span>/g, "*/");
            return c.replace(/(\/\*[\s\S]*?\*\/)/g, clear_spans);
        }

        var elements = document.querySelectorAll("pre.highlight_sql");

        for (var i = 0; i < elements.length; i++) {
            elements[i].innerHTML = highlight_sql(elements[i].innerHTML);
        }
        //]]></script>
{% endblock %}